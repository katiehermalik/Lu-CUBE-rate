{
  "cubes": [
    {
      "question": "What is a closure in JavaScript?",
      "answer": "A closure is an inner function that has access to the variables in the outer (enclosing) function’s scope chain. The closure has access to variables in three scopes; specifically: (1) variable in its own scope, (2) variables in the enclosing function’s scope, and (3) global variables.",
      "hint": "Think of a closure as a function that carries a backpack with it.",
      "visual_aid": "https://miro.medium.com/max/620/0*n6pke36dvxSHV7RW.png",
      "link": "https://www.debuggr.io/js-closure-in-depth/",
      "link_alias": "Closure in depth",
      "notes": "When a function gets created and passed around or returned from another function, it carries a backpack with it. And in the backpack are all the variables that were in scope when the function was declared.",
      "user": "1"
    },
    {
      "question": "What is a closure in JavaScript?",
      "answer": "A closure is an inner function that has access to the variables in the outer (enclosing) function’s scope chain. The closure has access to variables in three scopes; specifically: (1) variable in its own scope, (2) variables in the enclosing function’s scope, and (3) global variables.",
      "hint": "Think of a closure as a function that carries a backpack with it.",
      "visual_aid": "https://miro.medium.com/max/620/0*n6pke36dvxSHV7RW.png",
      "link": "https://www.debuggr.io/js-closure-in-depth/",
      "link_alias": "Closure in depth",
      "notes": "When a function gets created and passed around or returned from another function, it carries a backpack with it. And in the backpack are all the variables that were in scope when the function was declared.",
      "user": "1"
    }
  ]
}